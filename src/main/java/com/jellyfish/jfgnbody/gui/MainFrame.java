package com.jellyfish.jfgnbody.gui;

import com.jellyfish.jfgnbody.interfaces.NBodyDrawable;
import com.jellyfish.jfgnbody.interfaces.Writable;
import com.jellyfish.jfgnbody.nbody.NBody;
import com.jellyfish.jfgnbody.nbody.constants.NBodyConst;
import com.jellyfish.jfgnbody.nbody.force.BHTreeForceUpdater;
import com.jellyfish.jfgnbody.nbody.force.ForceUpdater;
import com.jellyfish.jfgnbody.nbody.simulations.AbstractSimulation;
import com.jellyfish.jfgnbody.nbody.space.SpatialArea;
import java.awt.BorderLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;

/**
 *
 * @author thw
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Panel for graphic display.
     */
    private final NBodyDrawable nBodyPanel;

    /**
     * Creates new form MainFrame
     * @param nBodyPanel
     */
    public MainFrame(final NBodyDrawable nBodyPanel) {
        
        initComponents();
        this.setBackground(NBodyConst.BG_COLOR);
        this.getContentPane().setBackground(NBodyConst.BG_COLOR);
        Image icon = new BufferedImage(1, 1, BufferedImage.TYPE_INT_ARGB_PRE);
        this.setIconImage(icon);
        this.nBodyPanel = nBodyPanel;
        this.setLayout(new BorderLayout());
        this.add(this.nBodyPanel.getPanel(), BorderLayout.CENTER);
        this.pack();
        this.nBodyPanel.setSpatialArea(new SpatialArea(0, 0, 
                this.nBodyPanel.getPanel().getWidth(), this.nBodyPanel.getPanel().getHeight()));
        this.setLocationRelativeTo(null);
        this.setExtendedState(this.getExtendedState() | javax.swing.JFrame.MAXIMIZED_BOTH);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar = new javax.swing.JMenuBar();
        simulationMenu = new javax.swing.JMenu();
        start1MenuItem = new javax.swing.JMenuItem();
        clearMenuItem = new javax.swing.JMenuItem();
        separator1 = new javax.swing.JPopupMenu.Separator();
        bruteForceMenuItem = new javax.swing.JMenuItem();
        bhtreeMenuItem = new javax.swing.JMenuItem();
        separator2 = new javax.swing.JPopupMenu.Separator();
        displayOutputMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        pauseSimulationCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NBody - Gravity simulation");
        setBackground(new java.awt.Color(51, 51, 51));
        setIconImages(null);
        setName("mainframe"); // NOI18N
        setPreferredSize(new java.awt.Dimension(800, 600));
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        menuBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        simulationMenu.setBorder(null);
        simulationMenu.setText("Simulation");

        start1MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        start1MenuItem.setText("Start a new simulation");
        start1MenuItem.setBorder(null);
        start1MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start1MenuItemActionPerformed(evt);
            }
        });
        simulationMenu.add(start1MenuItem);

        clearMenuItem.setText("Clear simulation");
        clearMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearMenuItemActionPerformed(evt);
            }
        });
        simulationMenu.add(clearMenuItem);
        simulationMenu.add(separator1);

        bruteForceMenuItem.setText("Switch to brute force gravity calculation");
        bruteForceMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bruteForceMenuItemActionPerformed(evt);
            }
        });
        simulationMenu.add(bruteForceMenuItem);

        bhtreeMenuItem.setText("Switch to Barnes-Hut tree gravity calculation");
        bhtreeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bhtreeMenuItemActionPerformed(evt);
            }
        });
        simulationMenu.add(bhtreeMenuItem);
        simulationMenu.add(separator2);

        displayOutputMenuItem.setText("Display all simulation data as output");
        displayOutputMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayOutputMenuItemActionPerformed(evt);
            }
        });
        simulationMenu.add(displayOutputMenuItem);
        simulationMenu.add(jSeparator1);

        pauseSimulationCheckBoxMenuItem.setText("Pause NBody simulation");
        pauseSimulationCheckBoxMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseSimulationCheckBoxMenuItemActionPerformed(evt);
            }
        });
        simulationMenu.add(pauseSimulationCheckBoxMenuItem);

        menuBar.add(simulationMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 710, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 478, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("ResultOfObjectAllocationIgnored")
    private void start1MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start1MenuItemActionPerformed
        new NewSimulationDialog(this);
    }//GEN-LAST:event_start1MenuItemActionPerformed

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        this.nBodyPanel.getSpatialArea().updateSize(this.nBodyPanel.getPanel().getWidth(), 
                this.nBodyPanel.getPanel().getHeight());
    }//GEN-LAST:event_formWindowStateChanged

    private void bruteForceMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bruteForceMenuItemActionPerformed
        this.nBodyPanel.swapForceUpdater(new ForceUpdater());
    }//GEN-LAST:event_bruteForceMenuItemActionPerformed

    private void bhtreeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bhtreeMenuItemActionPerformed
        this.nBodyPanel.swapForceUpdater(new BHTreeForceUpdater());
    }//GEN-LAST:event_bhtreeMenuItemActionPerformed

    private void displayOutputMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayOutputMenuItemActionPerformed
        if (this.nBodyPanel.getWriter() != null) return;
        final Writable w = new DataSimulationDisplayer();
        this.nBodyPanel.setWriter(w);
        GUIDTO.displayOutput = true;
    }//GEN-LAST:event_displayOutputMenuItemActionPerformed

    private void pauseSimulationCheckBoxMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseSimulationCheckBoxMenuItemActionPerformed
        GUIDTO.pause = this.pauseSimulationCheckBoxMenuItem.isSelected();
    }//GEN-LAST:event_pauseSimulationCheckBoxMenuItemActionPerformed

    private void clearMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMenuItemActionPerformed
        this.nBodyPanel.clear();
    }//GEN-LAST:event_clearMenuItemActionPerformed
    
    public NBodyDrawable getnBodyPanel() {
        return this.nBodyPanel;
    }
    
    public void resetSimulation(final int n, final int iSpeed, final AbstractSimulation sim) {
        this.nBodyPanel.restart(n, iSpeed, sim);
    }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem bhtreeMenuItem;
    private javax.swing.JMenuItem bruteForceMenuItem;
    private javax.swing.JMenuItem clearMenuItem;
    private javax.swing.JMenuItem displayOutputMenuItem;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JCheckBoxMenuItem pauseSimulationCheckBoxMenuItem;
    private javax.swing.JPopupMenu.Separator separator1;
    private javax.swing.JPopupMenu.Separator separator2;
    private javax.swing.JMenu simulationMenu;
    private javax.swing.JMenuItem start1MenuItem;
    // End of variables declaration//GEN-END:variables
       
}
